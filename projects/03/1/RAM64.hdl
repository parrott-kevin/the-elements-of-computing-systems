// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {

    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[3..5], a = a, b = b, c = c, d = d, e = e,
        f = f, g = g, h = h);
    RAM8(in = in, load = a, address = address[0..2], out = aa);
    RAM8(in = in, load = b, address = address[0..2], out = bb);
    RAM8(in = in, load = c, address = address[0..2], out = cc);
    RAM8(in = in, load = d, address = address[0..2], out = dd);
    RAM8(in = in, load = e, address = address[0..2], out = ee);
    RAM8(in = in, load = f, address = address[0..2], out = ff);
    RAM8(in = in, load = g, address = address[0..2], out = gg);
    RAM8(in = in, load = h, address = address[0..2], out = hh);
    Mux8Way16(a = aa, b = bb, c = cc, d = dd, e = ee, f = ff, g = gg, h = hh, 
        sel = address[3..5], out = out);
}
